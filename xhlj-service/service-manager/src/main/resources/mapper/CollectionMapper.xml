<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.swyxl.manager.mapper.CollectionMapper">

    <sql id="columns">
        id, name, resource,type, subtype, is_deleted, create_time, update_time
    </sql>

    <insert id="save">
        insert into collection( name, resource,type, subtype)
        values ( #{name}, #{resource},#{type}, #{subtype})
    </insert>

    <select id="findById" resultType="com.swyxl.model.entity.service.active.Collection">
        select <include refid="columns"/> from collection where id = #{id} and is_deleted = 0
    </select>

    <select id="getByName" resultType="com.swyxl.model.entity.service.active.Collection">
        select <include refid="columns"/> from collection where name = #{name} and is_deleted = 0
    </select>

    <update id="update">
        update collection
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="resource != null">resource = #{resource},</if>
            <if test="type != null">type = #{type},</if>
            <if test="subtype!= null">subtype = #{subtype},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>


    <select id="page" resultType="com.swyxl.model.entity.service.active.Collection">
        select * from collection
        <where>
            <if test="name != null and name !=''">
                and name like concat('%',#{name},'%')
            </if>
            <if test="type != null and type !=''">
                and type like concat('%',#{type},'%')
            </if>
            and is_deleted = 0
        </where>
        order by create_time desc
    </select>
</mapper>