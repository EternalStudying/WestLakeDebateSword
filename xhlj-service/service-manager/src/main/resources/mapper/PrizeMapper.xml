<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.swyxl.manager.mapper.PrizeMapper">

    <sql id="columns">
        id, name, image, level, probability, stock, description, is_deleted, create_time, update_time
    </sql>

    <select id="getByName" resultType="com.swyxl.model.entity.service.exhibit.Prize">
        select <include refid="columns"/> from prize where name = #{name} and is_deleted = 0
    </select>

    <insert id="save">
        insert into prize(id,name,level, image,description)
        values (#{id},#{name},#{level},#{image},#{description})
    </insert>

    <select id="getById" resultType="com.swyxl.model.entity.service.exhibit.Prize">
        select <include refid="columns"/> from prize where id = #{id} and is_deleted = 0
    </select>

    <update id="update">
        update prize
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="image != null">image = #{image},</if>
            <if test="level != null">level = #{level},</if>
            <if test="description != null">description = #{description},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>

    <update id="updateProbability">
        update prize
            <trim prefix="set" suffixOverrides=",">
                <trim prefix="probability = case" suffix="end,">
                    <foreach collection="list" item="item" index="index">
                         when name = #{item.name} then #{item.probability}
                    </foreach>
                </trim>
            </trim>
             where name in
             <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
                 #{item.name,jdbcType=VARCHAR}
             </foreach>
    </update>

    <select id="pageLike" resultType="com.swyxl.model.entity.service.exhibit.Prize">
        select <include refid="columns"/> from prize
        <where>
            <if test="name != null and name !=''">
                and name like concat('%',#{name},'%')
            </if>
            <if test="level != null and level !=''">
                and level = #{level}
            </if>
            and is_deleted = 0
        </where>
        order by create_time desc
    </select>

    <select id="selectAll" resultType="com.swyxl.model.entity.service.exhibit.Prize">
        select <include refid="columns"/> from prize where is_deleted = 0
    </select>


</mapper>